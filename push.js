// Load the web-push package. This package manages
// VAPID keys and sends push notifications to
// a push endpoint.
const webpush = require('web-push');


// VAPID keys only need to be generated once. Un-comment
// this code to generate a public and private VAPID key.
// Look at the console output to retrieve the keys. Place
// the keys in the .env file, then comment the code out again.
/*
const vapidKeys = webpush.generateVAPIDKeys();
console.log(vapidKeys);
*/

// Set your app's Cloud Messaging API key. This comes from
// your Firebase project under 
// Settings > Cloud Messaging > Server key
webpush.setGCMAPIKey(process.env.FCM_KEY);

// Set your app's VAPID details. The public and private keys
// are generated by the commented-out code above.
// The subject is your email address in the following format:
// mailto:example@yourdomain.org
webpush.setVapidDetails(
  process.env.VAPID_SUBJECT,
  process.env.VAPID_PUBLIC_KEY,
  process.env.VAPID_PRIVATE_KEY
);

// Create an object to represent the options for each
// push message your app will send.
const pushOptions = {
  gcmAPIKey: process.env.FCM_KEY,
  vapidDetails: {
    subject: process.env.VAPID_SUBJECT,
    publicKey: process.env.VAPID_PUBLIC_KEY,
    privateKey: process.env.VAPID_PRIVATE_KEY
  }
};

// For each subscription to your push server, send a notification.
function sendNotifications(subscriptions, notification) {
  let endpoints = Object.keys(subscriptions);
  endpoints.map((i) => {
    sendNotification(subscriptions, subscriptions[i], notification);
  });
}

// Send a notification to a subscription endpoint.
function sendNotification(subscriptions, subscription, notification) { 
  let endpoint = subscription.endpoint;
  
  if (!(subscriptions[endpoint])) {
    return false;
  }
  let id = endpoint.substr((endpoint.length - 8), endpoint.length);
  let options = Object.assign({}, pushOptions, { TTL: 9000 });
  let payload = JSON.stringify(notification);
  
  webpush.sendNotification(subscription, payload, options)
  .then((result) => { console.log(id, result.statusCode); })
  .catch((error) => { console.log(id, error.body); });
}

// 
let push = {
  sendNotifications: sendNotifications,
  sendNotification: sendNotification
}

module.exports = push;
